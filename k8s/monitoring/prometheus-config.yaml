apiVersion: v1
kind: ConfigMap
metadata:
  name: prometheus-config
  namespace: monitoring
data:
  prometheus.yml: |
    global:
      scrape_interval: 15s

    alerting:
      alertmanagers:
        - static_configs:
            - targets: ['alertmanager:9093']

    rule_files:
      - "/etc/prometheus/rules/*.rules"

    scrape_configs:
      - job_name: 'apps'
        kubernetes_sd_configs:
          - role: endpoints
            namespaces:
              names: ['app']
        relabel_configs:
          # Keep only services for our set of mock apps (by label 'app')
          - source_labels: [__meta_kubernetes_service_label_app]
            action: keep
            regex: (app|facebook|netflix|slack)
          # Keep only ports named 'http'
          - source_labels: [__meta_kubernetes_endpoint_port_name]
            action: keep
            regex: http
          # Set a clean 'job' label
          - target_label: job
            replacement: apps

      - job_name: 'cadvisor'
        static_configs:
          - targets: ['cadvisor:8080']

      - job_name: 'blackbox'
        metrics_path: /probe
        params:
          module: [http_2xx]
        static_configs:
          - targets:
              - https://tls-proxy.app.svc.cluster.local:443
        relabel_configs:
          - source_labels: [__address__]
            target_label: __param_target
          - source_labels: [__param_target]
            target_label: instance
          - target_label: __address__
            replacement: blackbox-exporter:9115

---
apiVersion: v1
kind: ConfigMap
metadata:
  name: prometheus-rules
  namespace: monitoring
data:
  app-down.rules: |
    groups:
      - name: app.rules
        rules:
          - alert: AppDown
            expr: (sum by (service) (up{job="apps"})) == 0
            for: 30s
            labels:
              severity: page
            annotations:
              summary: "App target is down"
              description: "Prometheus job 'app' has no healthy instances for more than 30s."
  tls-expiry.rules: |
    groups:
      - name: tls.rules
        rules:
          - alert: TLSCertificateExpired
            expr: time() > probe_ssl_earliest_cert_expiry{job="blackbox"}
            for: 1m
            labels:
              severity: page
              service: tls-proxy
            annotations:
              summary: "TLS certificate has expired for {{ $labels.instance }}"
              description: "The TLS certificate presented by {{ $labels.instance }} expired at {{ $value | humanizeTimestamp }}."
          - alert: TLSCertificateExpiringSoon
            expr: (probe_ssl_earliest_cert_expiry{job="blackbox"} - time()) < 14*24*3600
            for: 5m
            labels:
              severity: warning
              service: tls-proxy
            annotations:
              summary: "TLS certificate expires soon for {{ $labels.instance }}"
              description: "The TLS certificate presented by {{ $labels.instance }} will expire in less than 14 days (at {{ $value | humanizeTimestamp }})."
